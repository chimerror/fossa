// Compiled by ClojureScript 1.9.89 {:static-fns true, :optimize-constants true}
goog.provide('phzr.impl.accessors.physics.p2');
goog.require('cljs.core');
phzr.impl.accessors.physics.p2.p2_get_properties = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$collision_DASH_groups,cljs.core.cst$kw$use_DASH_elapsed_DASH_time,cljs.core.cst$kw$paused,cljs.core.cst$kw$on_DASH_constraint_DASH_removed,cljs.core.cst$kw$on_DASH_body_DASH_added,cljs.core.cst$kw$frame_DASH_rate,cljs.core.cst$kw$game,cljs.core.cst$kw$time,cljs.core.cst$kw$on_DASH_begin_DASH_contact,cljs.core.cst$kw$everything_DASH_collision_DASH_group,cljs.core.cst$kw$sleep_DASH_mode,cljs.core.cst$kw$walls,cljs.core.cst$kw$gravity,cljs.core.cst$kw$nothing_DASH_collision_DASH_group,cljs.core.cst$kw$on_DASH_contact_DASH_material_DASH_removed,cljs.core.cst$kw$on_DASH_end_DASH_contact,cljs.core.cst$kw$post_DASH_broadphase_DASH_callback,cljs.core.cst$kw$apply_DASH_damping,cljs.core.cst$kw$on_DASH_spring_DASH_removed,cljs.core.cst$kw$apply_DASH_spring_DASH_forces,cljs.core.cst$kw$total,cljs.core.cst$kw$restitution,cljs.core.cst$kw$apply_DASH_gravity,cljs.core.cst$kw$bounds_DASH_collides_DASH_with,cljs.core.cst$kw$callback_DASH_context,cljs.core.cst$kw$bounds_DASH_collision_DASH_group,cljs.core.cst$kw$on_DASH_spring_DASH_added,cljs.core.cst$kw$on_DASH_contact_DASH_material_DASH_added,cljs.core.cst$kw$solve_DASH_constraints,cljs.core.cst$kw$emit_DASH_impact_DASH_event,cljs.core.cst$kw$on_DASH_constraint_DASH_added,cljs.core.cst$kw$friction,cljs.core.cst$kw$contact_DASH_material,cljs.core.cst$kw$on_DASH_body_DASH_removed],["collisionGroups","useElapsedTime","paused","onConstraintRemoved","onBodyAdded","frameRate","game","time","onBeginContact","everythingCollisionGroup","sleepMode","walls","gravity","nothingCollisionGroup","onContactMaterialRemoved","onEndContact","postBroadphaseCallback","applyDamping","onSpringRemoved","applySpringForces","total","restitution","applyGravity","boundsCollidesWith","callbackContext","boundsCollisionGroup","onSpringAdded","onContactMaterialAdded","solveConstraints","emitImpactEvent","onConstraintAdded","friction","contactMaterial","onBodyRemoved"]);
phzr.impl.accessors.physics.p2.p2_set_properties = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$collision_DASH_groups,cljs.core.cst$kw$use_DASH_elapsed_DASH_time,cljs.core.cst$kw$paused,cljs.core.cst$kw$on_DASH_constraint_DASH_removed,cljs.core.cst$kw$on_DASH_body_DASH_added,cljs.core.cst$kw$frame_DASH_rate,cljs.core.cst$kw$game,cljs.core.cst$kw$on_DASH_begin_DASH_contact,cljs.core.cst$kw$everything_DASH_collision_DASH_group,cljs.core.cst$kw$sleep_DASH_mode,cljs.core.cst$kw$walls,cljs.core.cst$kw$gravity,cljs.core.cst$kw$nothing_DASH_collision_DASH_group,cljs.core.cst$kw$on_DASH_contact_DASH_material_DASH_removed,cljs.core.cst$kw$on_DASH_end_DASH_contact,cljs.core.cst$kw$post_DASH_broadphase_DASH_callback,cljs.core.cst$kw$apply_DASH_damping,cljs.core.cst$kw$on_DASH_spring_DASH_removed,cljs.core.cst$kw$apply_DASH_spring_DASH_forces,cljs.core.cst$kw$restitution,cljs.core.cst$kw$apply_DASH_gravity,cljs.core.cst$kw$bounds_DASH_collides_DASH_with,cljs.core.cst$kw$callback_DASH_context,cljs.core.cst$kw$bounds_DASH_collision_DASH_group,cljs.core.cst$kw$on_DASH_spring_DASH_added,cljs.core.cst$kw$on_DASH_contact_DASH_material_DASH_added,cljs.core.cst$kw$solve_DASH_constraints,cljs.core.cst$kw$emit_DASH_impact_DASH_event,cljs.core.cst$kw$on_DASH_constraint_DASH_added,cljs.core.cst$kw$friction,cljs.core.cst$kw$contact_DASH_material,cljs.core.cst$kw$on_DASH_body_DASH_removed],["collisionGroups","useElapsedTime","paused","onConstraintRemoved","onBodyAdded","frameRate","game","onBeginContact","everythingCollisionGroup","sleepMode","walls","gravity","nothingCollisionGroup","onContactMaterialRemoved","onEndContact","postBroadphaseCallback","applyDamping","onSpringRemoved","applySpringForces","restitution","applyGravity","boundsCollidesWith","callbackContext","boundsCollisionGroup","onSpringAdded","onContactMaterialAdded","solveConstraints","emitImpactEvent","onConstraintAdded","friction","contactMaterial","onBodyRemoved"]);
